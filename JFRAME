package gremlinrunner;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author rohan
 */
import static gremlinrunner.GremlinRunner.gremlins;
import static gremlinrunner.GremlinRunner.maze;
import static gremlinrunner.GremlinRunner.position;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import static sun.management.snmp.jvminstr.JvmThreadInstanceEntryImpl.ThreadStateMap.Byte0.runnable;

public class JFRAME extends javax.swing.JFrame {
static int i=0;
static boolean isGoing;
	/**
	 * Creates new form JFRAME
	 * @throws java.lang.Exception
	 */
	public JFRAME()    {
		initComponents();
	isGoing=true;
	/*
	assert(isGoing);
	boolean goodCodeEh=true;
	assert(goodCodeEh);
	*/
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
 // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
 private void initComponents() {

  jOptionPane1 = new javax.swing.JOptionPane();
  textArea1 = new java.awt.TextArea();
  textArea2 = new java.awt.TextArea();
  textArea3 = new java.awt.TextArea();
  textArea4 = new java.awt.TextArea();
  textArea5 = new java.awt.TextArea();
  panel1 = new java.awt.Panel();
  jButton1 = new javax.swing.JButton();
  jButton2 = new javax.swing.JButton();
  jButton3 = new javax.swing.JButton();
  jButton4 = new javax.swing.JButton();
  jButton5 = new javax.swing.JButton();
  jButton6 = new javax.swing.JButton();

  jOptionPane1.setMessage("");

  setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

  panel1.setBackground(new java.awt.Color(0, 0, 255));

  jButton1.setText("Up (2d) ");
  jButton1.setToolTipText("Go up in the same floor");
  jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
  jButton1.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
				try {
					jButton1ActionPerformed(evt);
				} catch (Exception ex) {
					Logger.getLogger(JFRAME.class.getName()).log(Level.SEVERE, null, ex);
				}
   }
  });

  jButton2.setText("Right ");
  jButton2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
  jButton2.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
				try {
					jButton2ActionPerformed(evt);
				} catch (Exception ex) {
					Logger.getLogger(JFRAME.class.getName()).log(Level.SEVERE, null, ex);
				}
   }
  });

  jButton3.setText("down(2d)");
  jButton3.setToolTipText("Go down in the same floor");
  jButton3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
  jButton3.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
				try {
					jButton3ActionPerformed(evt);
				} catch (Exception ex) {
					Logger.getLogger(JFRAME.class.getName()).log(Level.SEVERE, null, ex);
				}
   }
  });

  jButton4.setText("Left");
  jButton4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
  jButton4.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
				try {
					jButton4ActionPerformed(evt);
				} catch (Exception ex) {
					Logger.getLogger(JFRAME.class.getName()).log(Level.SEVERE, null, ex);
				}
   }
  });

  jButton5.setText("Up(3d)");
  jButton5.setToolTipText("Jump up one floor");
  jButton5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
  jButton5.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
				try {
					jButton5ActionPerformed(evt);
				} catch (Exception ex) {
					Logger.getLogger(JFRAME.class.getName()).log(Level.SEVERE, null, ex);
				}
   }
  });

  jButton6.setText("Down 3D");
  jButton6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
  jButton6.addActionListener(new java.awt.event.ActionListener() {
   public void actionPerformed(java.awt.event.ActionEvent evt) {
				try {
					jButton6ActionPerformed(evt);
				} catch (Exception ex) {
					Logger.getLogger(JFRAME.class.getName()).log(Level.SEVERE, null, ex);
				}
   }
  });

  javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
  panel1.setLayout(panel1Layout);
  panel1Layout.setHorizontalGroup(
   panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
   .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
    .addContainerGap(42, Short.MAX_VALUE)
    .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
     .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
     .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
    .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
     .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
     .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
    .addGap(19, 19, 19))
  );
  panel1Layout.setVerticalGroup(
   panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
   .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
    .addContainerGap(59, Short.MAX_VALUE)
    .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
     .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
      .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
       .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
       .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
      .addGap(38, 38, 38))
     .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
      .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
       .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
       .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
      .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
       .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
       .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))))
    .addGap(44, 44, 44))
  );

  javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
  getContentPane().setLayout(layout);
  layout.setHorizontalGroup(
   layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
   .addGroup(layout.createSequentialGroup()
    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
     .addGroup(layout.createSequentialGroup()
      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
       .addComponent(textArea2, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
       .addComponent(textArea5, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
       .addComponent(textArea3, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
       .addComponent(textArea4, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE))
     .addGroup(layout.createSequentialGroup()
      .addComponent(textArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
    .addGap(602, 602, 602)
    .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
  );
  layout.setVerticalGroup(
   layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
   .addGroup(layout.createSequentialGroup()
    .addComponent(textArea5, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
    .addComponent(textArea4, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
    .addComponent(textArea3, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
    .addComponent(textArea2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
    .addGap(2, 2, 2)
    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
     .addComponent(textArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
     .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    .addContainerGap(75, Short.MAX_VALUE))
  );

  pack();
 }// </editor-fold>                        
/**
	* Moves as it says on the button (up) in 2d
	* @param evt 
	*/
 private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)    {                                         
	doMoveDisplay('w');
 }                                        
/**
	* Moves as it says on the button right
	* @param evt 
	*/
 private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)    {                                         
		doMoveDisplay('d');
 }                                        
/**
	* Moves as it says on the button left
	* @param evt 
	*/
 private void jButton4ActionPerformed(java.awt.event.ActionEvent evt)    {                                         
doMoveDisplay('a');		
 }                                        
/**
	* Moves as it says on the button down in 2d
	* @param evt 
	*/
 private void jButton3ActionPerformed(java.awt.event.ActionEvent evt)    {                                         
		doMoveDisplay('s');
 }                                        
/**
	* Moves as it says on the button down in 3d
	* @param evt 
	*/
 private void jButton6ActionPerformed(java.awt.event.ActionEvent evt)    {                                         
doMoveDisplay('v');
 }                                        
/**
	* Moves as it says on the button up in 3d
	* @param evt 
	*/
 private void jButton5ActionPerformed(java.awt.event.ActionEvent evt)    {                                         
doMoveDisplay('r'); 
 }                                        

/**
	* gets string from pop up dialog box
	* requires a JFRAME class
	* @param prompt is the message
	 * @return a string from the pop up window
	*/
	public String getStringFromPopUp(String prompt){
	try {
		Thread.sleep(10);
	} catch (InterruptedException ex) {
		Logger.getLogger(JFRAME.class.getName()).log(Level.SEVERE, null, ex);
	}
		JTextArea textArea = new JTextArea();
  try{
			Thread.sleep(10);
		}catch(Exception e){}         
		textArea.setEditable(true);
            JScrollPane scrollPane = new JScrollPane(textArea);
            scrollPane.requestFocus();
            textArea.requestFocusInWindow();
            scrollPane.setPreferredSize(new Dimension(400, 100));
												textArea5.setEditable(true);
												//writeTo(5,prompt);
												JOptionPane.showMessageDialog(
                   this.jOptionPane1, scrollPane,
                    prompt, JOptionPane.PLAIN_MESSAGE);
            String info;
												do{
												 info = textArea.getText();
												}while(info == null);
												return info;
	}
	/**
	 * Sets look and feel code
	 */
	public void mainMethod()  {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(JFRAME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(JFRAME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(JFRAME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(JFRAME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			@Override
			public void run() {
				try {
					new JFRAME().setVisible(true);
					if(!GremlinRunner.alive){
						int i=0/0;
					}
				} catch (Exception ex) {
				}
			}
		});
	
	}
 // Variables declaration - do not modify                     
 private javax.swing.JButton jButton1;
 private javax.swing.JButton jButton2;
 private javax.swing.JButton jButton3;
 private javax.swing.JButton jButton4;
 private javax.swing.JButton jButton5;
 private javax.swing.JButton jButton6;
 private javax.swing.JOptionPane jOptionPane1;
 private java.awt.Panel panel1;
 private java.awt.TextArea textArea1;
 private java.awt.TextArea textArea2;
 private java.awt.TextArea textArea3;
 private java.awt.TextArea textArea4;
 private java.awt.TextArea textArea5;
 // End of variables declaration                   
	/**
		* do Gremlins every turn (it was the riginal method of Gremlin movement as 
		* opposed to in real time
		*/
	public static void doGremlinsOld()   {
		for(Gremlin aGremlin:gremlins){
			aGremlin.takeTurn();
		}
	}
	/**
		* @param move is a char representing the move w a s d r v 
		*/
	public void doMoveDisplay(char move)    {
GremlinRunner.makeMove(move);
if(!isGoing){
	GremlinRunner.alive=false;
GremlinRunner.gui.setVisible(false);
}
doGremlinsOld();
dispPosition(2);
	}
		public void doMoveDisplay() {
if(!isGoing){
	GremlinRunner.alive=false;
GremlinRunner.gui.setVisible(false);
}
			dispPosition(2);
	}
		/**
		* prints to text boxes the area around the player "P"
		* @param renderDistance render distance around it
		*/
	public void dispPosition(int renderDistance) {
		int floor=6;
		for (int z = position[1] - renderDistance; 
										z <= position[1] + renderDistance; z++) {
			String dispMe="";
			for (int y = position[2] - renderDistance; 
											y <= position[2] + renderDistance; y++) {
				for (int x = position[3] - renderDistance; 
												x <= position[3] + renderDistance; x++) {
					String symbol = "[!!!]"; //its a gremlin unless its one of the others
					// a gremlin has code 127
					try {
						if (maze[0][z][y][x] == 1) {
							symbol = "[__]";//pasage
						} else if (maze[0][z][y][x] == 2) {
							symbol = "[ P ]";//player
						} else if (maze[0][z][y][x] == 0) {
							symbol = "[W]";//wall
						}else if(maze[0][z][y][x]==3){
							symbol="[F]";//Finish line
						}
					} catch (Exception e) {
// Render walls all around the maze
						symbol = "[W]";
					}
				 dispMe+=symbol;
				}
				dispMe+="\n";
			}
		floor--;
		if(floor==1){
			textArea1.setText(dispMe);
		}else if(floor==2){
			textArea2.setText(dispMe);
		}else if(floor==3){
			textArea3.setText(dispMe);
		}else if(floor==4){
			textArea4.setText(dispMe);
			}
		else /**floor ==5*/{
			textArea5.setText(dispMe);
		}
	}
	}
	/**
		* a static version of doMoveDisplay
		*/
public static void doMoveDisplayStatic(){
GremlinRunner.gui.doMoveDisplay();
}
}

